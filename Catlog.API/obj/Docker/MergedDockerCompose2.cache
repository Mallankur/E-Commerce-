name: dockercompose9340450937930486482
services:
  catlog.api:
    build:
      context: C:\Users\ankur\source\catlog\doccker-with-web-api\Catlog.API
      dockerfile: Catlog.API/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Catlog.API
    container_name: catlog.api
    depends_on:
      catlogdb:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
      MongoObject: mongodb://mongo-container:27017
    image: catlogapi
    labels:
      com.microsoft.visual-studio.project-name: Catlog.API
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/Catlog.API.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "9000"
      protocol: tcp
    - mode: ingress
      target: 443
      published: "443"
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Users\ankur\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\ankur\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\ankur\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  catlogdb:
    container_name: mongo-container
    image: mongo
    networks:
      default: null
    ports:
    - mode: ingress
      target: 27017
      published: "27017"
      protocol: tcp
    restart: always
    volumes:
    - type: volume
      source: mongo_data
      target: /data/db
      volume: {}
networks:
  default:
    name: dockercompose9340450937930486482_default
volumes:
  mongo_data:
    name: dockercompose9340450937930486482_mongo_data